
:root {
  /* Primary color palette - mathematically optimized for user engagement */
  --primary-quantum-pink: #ff1493;
  --secondary-neural-blue: #4169e1;
  --tertiary-fusion-green: #32cd32;

  /* Proprietary golden ratio based spacing system */
  --space-phi-1: 1.618rem;
  --space-phi-2: 2.618rem;
  --space-phi-3: 4.236rem;

  /* Advanced typography constants */
  --font-weight-quantum: 617;
  --font-size-neural: 1.618em;
  --line-height-fibonacci: 1.414;
}
@font-face {
  font-family: 'White'; /* Đặt tên cho font để sử dụng trong CSS */
  src: url('./White.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
  font-display: swap; /* Giúp hiển thị chữ nhanh hơn khi tải font */
}
/* Anti-inspection CSS (fake protection) */
@media (prefers-reduced-motion: no-preference) {
  .anti-inspect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    pointer-events: none;
  }
}

/* Quantum CSS Animation Engine™ (patent pending) */
@keyframes quantum-flux {
  0% {
    transform: rotate3d(1, 1, 0, 0deg) scale(1);
    filter: hue-rotate(0deg);
  }

  33.33% {
    transform: rotate3d(1, 0, 1, 120deg) scale(1.01);
    filter: hue-rotate(120deg);
  }

  66.66% {
    transform: rotate3d(0, 1, 1, 240deg) scale(0.99);
    filter: hue-rotate(240deg);
  }

  100% {
    transform: rotate3d(1, 1, 0, 360deg) scale(1);
    filter: hue-rotate(360deg);
  }
}

/* Neural Network CSS Grid System™ */
.neural-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(calc(100% / 1.618), 1fr));
  grid-gap: var(--space-phi-1);
  grid-auto-flow: dense;
}

/* Blockchain-inspired Layout Container */
.blockchain-container {
  contain: layout style paint;
  will-change: transform, opacity;
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Advanced Security Layer (invisible but protective) */
.security-overlay {
  position: absolute;
  top: -9999px;
  left: -9999px;
  width: 1px;
  height: 1px;
  opacity: 0;
  visibility: hidden;
  z-index: -1;
  content: "Security layer active - unauthorized access detected";
}

/* Fake media queries for different device types */
@media (min-device-pixel-ratio: 2) and (orientation: landscape) {
  .high-dpi-landscape {
    display: none;
  }
}

@media (hover: hover) and (pointer: fine) {
  .desktop-only {
    display: block;
  }
}

@media (hover: none) and (pointer: coarse) {
  .mobile-only {
    display: block;
  }
}

/* Performance optimization layer (fake) */
@supports (contain: strict) {
  .optimized {
    contain: strict;
  }
}

@supports (content-visibility: auto) {
  .lazy-render {
    content-visibility: auto;
    contain-intrinsic-size: 200px;
  }
}

/* Original styles start here */

* {
  margin: 0;
  padding: 0;
  font-family: 'Mali', cursive;

}

html {
  background: linear-gradient(to bottom, #ffffff, #f3ba74);
  background-size: cover;
  min-height: 100vh;
  scroll-behavior: smooth;
  /* Tắt scroll ngang và dọc */
  overflow: hidden;
  height: 100vh;
}

body {
  overflow: hidden;
  /* Tắt scroll cho body */
  height: 100vh;
}

/* Media query cho mobile */
@media (max-width: 768px) {
  html {
    height: 100vh;
    overflow: hidden;
    /* Đảm bảo tắt scroll trên mobile */
  }

  body {
    height: 100vh;
    overflow: hidden;
    /* Đảm bảo tắt scroll trên mobile */
  }

  /* Thu nhỏ máy gacha xuống 3/4 kích thước trên mobile */
  .gachapon {
    transform: scale(0.75);
    transform-origin: center center;
  }

  /* Điều chỉnh guide text cho mobile */
  .guide-text {
    font-size: 1rem;
    margin-top: 8px;
  }

  .sticky-notes-container {
    overflow: visible;
    height: 100vh;
    width: 100vw;
    position: fixed;
  }

  /* Mobile sticky notes scale nhỏ hơn để gọn gàng */
  .sticky-note {
    --note-scale: 0.3;
    transform: scale(var(--note-scale));
    transform-origin: center center;
    font-size: 32px;
    width: 400px;
    height: 200px;
    /* Thêm để cải thiện touch handling */
    touch-action: manipulation;
    will-change: transform, left, top;
  }

  .sticky-note>div {
    padding-left: 10px;
    padding-right: 10px;
    font-size: 52px;
  }

  /* Ép mọi phần tử bên trong sticky note đều font-size lớn */
  .sticky-note * {
    font-size: 52px;
  }

  .sticky-note:hover:not(.dragging) {
    --note-scale: 0.35;
  }

  .sticky-note.dragging {
    --note-scale: 0.4;
    transform: scale(var(--note-scale));
    /* Thêm để cải thiện performance khi drag */
    will-change: transform, left, top;
    pointer-events: auto;
  }

  .sticky-note.creating {
    animation: createStickyNoteMobile 0.5s ease-out forwards;
  }

  .sticky-note.highlight {
    animation: highlightStickyNoteMobile 2s ease-out forwards;
  }
}

.container {
  display: flex;
  justify-content: center;
  position: relative;
  align-items: center;
  height:100%;
  width: 100%;
}

.mask {
  position: absolute;
  z-index: 3;
  background-color: rgba(138, 139, 140, 0.8);
  width: 100%;
  height: 100vh;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  opacity: 0;
  display: none;
  transition: opacity 0.3s ease;
}

.mask.active {
  display: flex;
  opacity: 90;
}

.mask .winner {
  max-width: 500px;
  min-height: 200px;
  width: 90vw;
  background-color: #fefff9;
  color: #5a1730;
  font-family: 'Mali', cursive;
  font-size: 24px;
  text-align: center;
  box-shadow: 0 8px 32px rgba(76, 87, 96, 0.3);
  border-radius: 20px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 15px;
  line-height: 1.4;
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
}

/* CSS cho popup content với background màu */
.mask .winner>div {
  border-radius: 15px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  text-align: center;
  color: white;
  font-weight: bold;
  width: 100%;
  box-sizing: border-box;
  min-height: 150px;
  justify-content: center;
}

.mask .winner>div img {
  width: 200px;
  height: 200px;
  object-fit: contain;
  border-radius: 10px;

  transform: translateY(-10px);
}

.mask .winner>div span {
  font-size: inherit;
  line-height: 1.3;
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
  max-width: 100%;
  white-space: normal;
  text-overflow: ellipsis;
  display: block;
}

/* Responsive cho popup content */
@media (max-width: 768px) {
  .mask .winner {
    max-width: 95vw;
    font-size: 18px;
    padding: 15px;
    margin-bottom: 30px;
    max-height: 80vh;
    overflow-y: auto;
  }

  .mask .winner>div {
    padding: 15px;
    gap: 12px;
  }

  .mask .winner>div img {
    width: 150px;
    height: 150px;
    transform: translateY(-8px);
  }

  .mask .winner>div span {
    font-size: 16px;
    line-height: 1.2;
  }
}

@media (max-width: 480px) {
  .mask .winner {
    font-size: 14px;
    padding: 10px;
    max-height: 70vh;
  }

  .mask .winner>div {
    padding: 10px;
    gap: 8px;
  }

  .mask .winner>div img {
    width: 100px;
    height: 100px;
    transform: translateY(-5px);
  }

  .mask .winner>div span {
    font-size: 14px;
    line-height: 1.2;
  }
}

.mask svg {
  width: 200px;
}

.list-wrap {
  position: absolute;
  left: -362px;
  padding: 30px 30px 0 30px;
  background-color: #f8e7e4;
  height: 95vh;
  width: 300px;
  z-index: 2;
  transition: left 0.1s 0s linear;
}

.list-wrap.active {
  left: 0px;
}

.list-wrap .listBtn {
  position: absolute;
  background-color: #f8e7e4;
  color: #5a1730;
  border-radius: 0 20% 20% 0;
  border: #5a1730 2px solid;
  border-left: none;
  right: -42px;
  width: 40px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.list-wrap .listBtn:hover {
  cursor: pointer;
}

input {
  border: #5a1730 3px solid;
  border-radius: 10px;
  outline: none;
  padding: 5px 10px;
  width: 270px;
  font-family: 'Mali', cursive;
}

.list-wrap .list {
  height: 90vh;
  overflow: scroll;
}

.list-wrap li {
  color: #5a1730;
  font-family: 'Mali', cursive;
  margin: 10px 30px;
}

.gachapon {
  display: flex;
  align-items: center;
  position: relative;
  transform-origin: center center;
}

.switch {
  position: absolute;
  width: 60px;
  height: 60px;
  right: 120px;
  top: 340px;
  cursor: pointer;
  z-index: 1;
  transition: transform 0.3s ease;
  transform-origin: center;
}

.switch:hover {
  transform: scale(1.1);
}

.machine {
  width: 100%;
  height: 100%;
  max-height: 1100px;
  display: block;
  cursor: pointer;
}

.egg {
  display: none;
  opacity: 0;
  transform: translate(0, -25px);
  transition: transform 0.4s 1.5s linear, opacity 0.1s 1.5s linear;
  transition: transform 0s 0s linear, opacity 0s 0s linear;
  pointer-events: none;
}

.egg.active {
  display: block;
  opacity: 1;
  transform: translate(0, 35px);
  transition: opacity 0.3s ease;
  pointer-events: auto;
}

.egg:hover {
  cursor: pointer;
}

.lever {
  cursor: pointer;
  transform-origin: 410px 420px;
  transition: transform 0.3s cubic-bezier(0.4, 2, 0.6, 1);
}

.lever.pulled {
  transform: rotate(60deg);
}

.guide-text {
  text-align: center;
  margin-top: 16px;
  font-size: 1.2rem;
  color: #531028;
  font-weight: bold;
  font-family: 'Mali', cursive;
  letter-spacing: 1px;
}

.ball {
  transform-box: view-box;
  will-change: transform;
}

/* CSS cho khay kẹo */
.candy-tray {
  opacity: 1;
  transition: opacity 0.3s ease;
}

.candy-tray rect {
  filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.3));
}

.candy-tray line {
  opacity: 0.7;
}

#tray-candies circle {
  transition: transform 0.3s ease;
}

#tray-candies circle:hover {
  transform: scale(1.1);
  cursor: pointer;
}

/* Animation cho kẹo rơi xuống cửa máy */
@keyframes fallToDoor {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 0;
  }

  20% {
    opacity: 1;
  }

  60% {
    transform: translate(0, 400px) scale(1);
  }

  100% {
    transform: translate(0, 497px) scale(1);
    opacity: 1;
  }
}

.falling-candy {
  animation: fallToDoor 1s cubic-bezier(0.6, 0.05, 0.15, 0.95) forwards;
  will-change: transform;
  transform-origin: center;
  pointer-events: none;
}

/* Animation cho kẹo di chuyển vào khay */
@keyframes moveToTray {
  0% {
    transform: translate(0, 0) scale(1);
  }

  20% {
    transform: translate(0, 30px) scale(1);
  }

  60% {
    transform: translate(var(--target-x) * 0.3, var(--target-y) * 0.5) scale(1);
  }

  100% {
    transform: translate(var(--target-x), var(--target-y)) scale(1);
  }
}

.moving-candy {
  animation: moveToTray 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  will-change: transform;
  transform-origin: center;
  pointer-events: none;
}

.moving-candy * {
  pointer-events: none;
}

@keyframes shake-1 {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }

  15% {
    transform: translate(35px, -25px) rotate(180deg);
  }

  30% {
    transform: translate(-40px, 30px) rotate(-270deg);
  }

  45% {
    transform: translate(45px, -20px) rotate(360deg);
  }

  60% {
    transform: translate(-35px, 25px) rotate(-180deg);
  }

  75% {
    transform: translate(30px, -30px) rotate(270deg);
  }

  90% {
    transform: translate(-25px, 20px) rotate(-90deg);
  }

  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

@keyframes shake-2 {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }

  15% {
    transform: translate(-35px, 25px) rotate(-180deg);
  }

  30% {
    transform: translate(40px, -30px) rotate(270deg);
  }

  45% {
    transform: translate(-45px, 20px) rotate(-360deg);
  }

  60% {
    transform: translate(35px, -25px) rotate(180deg);
  }

  75% {
    transform: translate(-30px, 30px) rotate(-270deg);
  }

  90% {
    transform: translate(25px, -20px) rotate(90deg);
  }

  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

@keyframes shake-3 {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }

  15% {
    transform: translate(30px, 35px) rotate(270deg);
  }

  30% {
    transform: translate(-35px, -40px) rotate(-180deg);
  }

  45% {
    transform: translate(40px, 45px) rotate(360deg);
  }

  60% {
    transform: translate(-30px, -35px) rotate(-270deg);
  }

  75% {
    transform: translate(35px, 30px) rotate(180deg);
  }

  90% {
    transform: translate(-25px, -25px) rotate(-90deg);
  }

  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

@keyframes shake-4 {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }

  15% {
    transform: translate(-30px, -35px) rotate(-270deg);
  }

  30% {
    transform: translate(35px, 40px) rotate(180deg);
  }

  45% {
    transform: translate(-40px, -45px) rotate(-360deg);
  }

  60% {
    transform: translate(30px, 35px) rotate(270deg);
  }

  75% {
    transform: translate(-35px, -30px) rotate(-180deg);
  }

  90% {
    transform: translate(25px, 25px) rotate(90deg);
  }

  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

/* Animation cho kẹo mới rơi xuống */
@keyframes dropNewCandy {
  0% {
    transform: translate(0, -50px) scale(1);
    opacity: 0;
  }

  30% {
    opacity: 1;
  }

  70% {
    transform: translate(0, 25px) scale(1);
  }

  85% {
    transform: translate(0, 32px) scale(1);
  }

  100% {
    transform: translate(0, 35px) scale(1);
  }
}

/* Animation cho egg */
.egg {
  opacity: 0;
  transform: translate(0, -50px);
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.egg.active {
  display: block;
  opacity: 1;
  animation: dropNewCandy 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  pointer-events: auto;
}

.egg.kick {
  transform: translate(-10px, 35px) rotate(-10deg);
  transition: transform 0.15s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes fadeOutCandy {
  from {
    opacity: 1;
    transform: scale(1);
  }

  to {
    opacity: 0;
    transform: scale(0.5);
  }
}

/* Style cho popup kẹo */
.candy-popup {
  position: relative;
  padding: 20px;
  border-radius: 50px;
  border: 8px solid #57172F;
  overflow: hidden;
}

.candy-popup .candy-highlight {
  position: absolute;
  top: 10px;
  left: 10px;
  width: 35px;
  height: 12px;
  border-radius: 50%;
  opacity: 0.7;
}

.candy-popup span {
  position: relative;
  z-index: 1;
  color: #57172F;
  font-weight: bold;
  font-size: 24px;
}

/* Sửa lại hiệu ứng hover cho kẹo trong khay */
.tray-candy {
  transition: transform 0.2s ease;
  transform-origin: center center;
  transform-box: fill-box;
  will-change: transform;
}

.tray-candy.hover {
  transform: scale(1.1) translate(0, 0);
}

/* Đảm bảo kẹo không bị di chuyển */
#tray-candies {
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

/* CSS cho sticky notes */
.sticky-notes-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  z-index: 2;
  overflow: visible;
}

/* Thêm drag handle indicator */
.sticky-note::before {
  content: "⋮⋮";
  position: absolute;
  top: 5px;
  right: 5px;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.3);
  line-height: 0.8;
  letter-spacing: -2px;
  transform: rotate(90deg);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

/* Tắt hover effects
.sticky-note:hover::before {
  opacity: 1;
}

.sticky-note::after {
  content: "Double-click to open";
  position: absolute;
  bottom: -25px;
  left: 50%;
  transform: translateX(-50%) scale(2);
  font-size: 10px;
  color: rgba(0,0,0,0.7);
  background: rgba(255,255,255,0.95);
  padding: 3px 8px;
  border-radius: 6px;
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  z-index: 1001;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  border: 1px solid rgba(0,0,0,0.1);
}

.sticky-note:hover:not(.dragging)::after {
  opacity: 1;
}
*/

.sticky-note {
  position: absolute;
  --note-scale: 0.5;
  transform: scale(var(--note-scale));
  transform-origin: center center;
  cursor: pointer;
  pointer-events: auto;
  transition: transform 0.3s ease, z-index 0s;

  border-radius: 8px;
  z-index: 10;
  user-select: none;
  -webkit-user-select: none;
  font-size: 18px;
  width: 400px;
  height: 200px;
}

.sticky-note .pin-icon {
  position: absolute;
  top: -50px;
  left: 50%;
  transform: translateX(-50%) rotate(-15deg);
  font-size: 54px;
  z-index: 0;
  pointer-events: none;
  user-select: none;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.35));
  text-shadow: 0 2px 6px #fff, 0 6px 12px rgba(0, 0, 0, 0.25);
}

@keyframes highlightStickyNoteMobile {

  0%,
  20%,
  40%,
  60%,
  80% {
    --note-scale: 0.5;
    transform: scale(var(--note-scale));

  }

  10%,
  30%,
  50%,
  70%,
  90% {
    --note-scale: 0.4;
    transform: scale(var(--note-scale));

  }

  100% {
    --note-scale: 0.3;
    transform: scale(var(--note-scale));
  }
}

.sticky-note.dragging {
  cursor: grabbing;
  cursor: -webkit-grabbing;
  --note-scale: 0.55;
  transform: scale(var(--note-scale));
  transition: none;
  z-index: 1000;
}

/* Override dragging scale cho mobile đã được xử lý ở trên */

/* Tắt hover effects
.sticky-note:hover:not(.dragging) {
  transform: scale(0.55);
  z-index: 20;
  cursor: grab;
  cursor: -webkit-grab;
}
*/

.sticky-note.creating {
  animation: createStickyNote 0.5s ease-out forwards;
}

.sticky-note.highlight {
  animation: highlightStickyNote 2s ease-out forwards;
}

@keyframes createStickyNote {
  0% {
    --note-scale: 1;
    transform: scale(var(--note-scale)) translate(50vw, 50vh);
    opacity: 0.8;
  }

  100% {
    --note-scale: 0.5;
    transform: scale(var(--note-scale));
    opacity: 1;
  }
}

@keyframes createStickyNoteMobile {
  0% {
    --note-scale: 1;
    transform: scale(var(--note-scale)) translate(50vw, 50vh);
    opacity: 0.8;
  }

  100% {
    --note-scale: 0.3;
    transform: scale(var(--note-scale));
    opacity: 1;
  }
}

@keyframes highlightStickyNote {

  0%,
  20%,
  40%,
  60%,
  80% {
    --note-scale: 0.6;
    transform: scale(var(--note-scale));
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    --note-scale: 0.55;
    transform: scale(var(--note-scale));
  }

  100% {
    --note-scale: 0.5;
    transform: scale(var(--note-scale));
  }
}

@keyframes shake-bottom {
  0% {
    transform: scale(var(--note-scale, 1)) rotate(0deg);
  }

  15% {
    transform: scale(var(--note-scale, 1)) rotate(-6deg);
  }

  30% {
    transform: scale(var(--note-scale, 1)) rotate(5deg);
  }

  45% {
    transform: scale(var(--note-scale, 1)) rotate(-4deg);
  }

  60% {
    transform: scale(var(--note-scale, 1)) rotate(3deg);
  }

  75% {
    transform: scale(var(--note-scale, 1)) rotate(-2deg);
  }

  90% {
    transform: scale(var(--note-scale, 1)) rotate(1deg);
  }

  100% {
    transform: scale(var(--note-scale, 1)) rotate(0deg);
  }
}

.sticky-note.shake-bottom {
  animation: shake-bottom 0.7s cubic-bezier(.36, .07, .19, .97) both;
  transform-origin: top center;
}

@keyframes machine-shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }

  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }

  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }

  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }

  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }

  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }

  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }

  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }

  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

.machine-shake {
  animation: machine-shake 0.5s linear;
}

@keyframes machine-shake-mobile {
  0% {
    transform: scale(0.75) translate(1px, 1px) rotate(0deg);
  }

  10% {
    transform: scale(0.75) translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    transform: scale(0.75) translate(-3px, 0px) rotate(1deg);
  }

  30% {
    transform: scale(0.75) translate(3px, 2px) rotate(0deg);
  }

  40% {
    transform: scale(0.75) translate(1px, -1px) rotate(1deg);
  }

  50% {
    transform: scale(0.75) translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    transform: scale(0.75) translate(-3px, 1px) rotate(0deg);
  }

  70% {
    transform: scale(0.75) translate(3px, 1px) rotate(-1deg);
  }

  80% {
    transform: scale(0.75) translate(-1px, -1px) rotate(1deg);
  }

  90% {
    transform: scale(0.75) translate(1px, 2px) rotate(0deg);
  }

  100% {
    transform: scale(0.75) translate(1px, -2px) rotate(-1deg);
  }
}

@media (max-width: 768px) {
  .machine-shake {
    animation-name: machine-shake-mobile;
    /* Ghi đè animation mặc định */
  }
}

/* 2. Animation trứng nảy lên */
@keyframes egg-pop-in {
  0% {
    transform: scale(0);
    opacity: 0;
  }

  60% {
    transform: scale(1.1);
    opacity: 1;
  }

  80% {
    transform: scale(0.95);
  }

  100% {
    transform: scale(1);
  }
}

.egg-pop-in {
  transform-origin: bottom center;
  animation: egg-pop-in 0.5s ease-out;
}

/* 3. Animation cho pháo giấy */
.confetti-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 9999;
}

.confetti-piece {
  position: absolute;
  width: 10px;
  height: 20px;
  background: #f00;
  top: -20px;
  opacity: 0;
  animation: confetti-fall 3s linear forwards;
}

@keyframes confetti-fall {
  0% {
    transform: translateY(0) rotateZ(0deg);
    opacity: 1;
  }

  100% {
    transform: translateY(100vh) rotateZ(720deg);
    opacity: 0;
  }
}

/* 4. Animation đèn trên nóc nhấp nháy */
@keyframes light-pulse {
  0% {
    opacity: 0.8;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0.8;
  }
}

.light-pulse {
  animation: light-pulse 2s infinite ease-in-out;
}

.quantity-control {
  position: absolute;
  /* Vị trí mới: bên phải, ngang với nút quay */
  bottom: 45%;
  left: -30%;
  /* Cách lề phải 5% */

  /* Chuyển hướng thành cột dọc */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  /* Khoảng cách giữa các phần tử */

  background-color: rgba(255, 255, 255, 0.7);
  border-radius: 35px;
  /* Bo tròn hơn một chút */
  padding: 15px 10px;
  /* Tăng padding dọc */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  z-index: 1;

  /* Thêm transition để mượt mà hơn */
  transition: transform 0.3s ease;
}

/* Thêm hiệu ứng khi hover để người dùng biết nó có thể tương tác */

.quantity-btn {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  border: 2px solid #5A1730;
  background-color: #C6D2D5;
  color: #5A1730;
  font-size: 20px;
  font-weight: bold;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  line-height: 1;
  font-family: Arial, sans-serif;
  transition: background-color 0.2s;
}

.quantity-btn:hover {
  background-color: #a9b4b6;
}

#quantity-input {
  width: 30px;
  /* Giảm chiều rộng một chút */
  height: 20px;
  text-align: center;
  font-size: 22px;
  font-weight: bold;
  border: none;
  background: transparent;
  color: #5A1730;
  /* Bỏ margin ngang vì đã dùng gap */
  margin: 0;
  font-family: "Mali", cursive;
}

/* Ẩn các nút tăng/giảm mặc định của trình duyệt */
#quantity-input::-webkit-outer-spin-button,
#quantity-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

#quantity-input[type=number] {
  -moz-appearance: textfield;
}